# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  publishing-to-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout service
        uses: actions/checkout@v2

      - name: Docker login
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          push: true
          tags: ghcr.io/bigtows/esp-controller:latest
#  update-staging-platform:
#    needs: publishing-to-docker
#    runs-on: ubuntu-latest
#    outputs:
#      job-status: ${{ job.status }}
#    steps:
#      - name: Checkout service
#        uses: actions/checkout@v2
#      - uses: ivido/helm-deploy@v1
#        with:
#          release: gateway
#          namespace: devbuff
#          timeout: 400s
#          chart: .
#          secrets-files: "./chart/values.staging.yaml"
#          tag: ${{ github.sha }}
#          tag-fields: "[\"image.tag\"]"
#        env:
#          KUBECONFIG_FILE: ${{ secrets.STAGING_KUBECONFIG }}
#  notification-telegram:
#    needs: update-staging-platform
#    runs-on: ubuntu-latest
#    if: ${{ always() }}
#    steps:
#      - uses: xinthink/action-telegram@v1.1
#        with:
#          botToken: ${{ secrets.TG_BOT_TOKEN }}
#          chatId: ${{ secrets.TG_CHAT_ID }}
#          jobStatus: ${{ needs.update-staging-platform.outputs.job-status }}
#          skipSuccess: false